原型规则

所有的引用类型（数组、对象、函数），
都具有对象特性，即可自由拓展属性（除了null）

都有一个__proto__属性（隐式原型），属性值是一个普通的对象，属性值指向它的构造函数的prototype属性值
var obj = {}
obj.__proto__ === Obeject.prototype

所有的函数，都有一个prototype属性（显示原型），属性值是一个普通的对象

当试图得到一个对象的属性时，如果这个对象本身没有这个属性，那么会去它的__proto__(即它的构造函数的prototype)中去找

var item
for(item in f){
	//高级浏览器已经在for in 中屏蔽了来自原型的属性
	//但是这里加上hasOwnProperty,保证程序的严谨
	if (f.hasOwnProperty(item)){
	console.log(item)
	}
}

